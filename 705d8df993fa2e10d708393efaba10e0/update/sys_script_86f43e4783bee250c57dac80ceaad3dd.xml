<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1804195_leave_ma_leave_request</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Verify Availabilty of Leave Before</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /* null when async */) 
{
    var start = new GlideDateTime(current.start_date);
	var end = new GlideDateTime(current.end_date);
	var duration = new GlideDuration(end.getNumericValue() - start.getNumericValue());
	var days = Math.floor(duration.getNumericValue() / (1000 * 60 * 60 * 24)) + 1;
	gs.info('Leave request days calculated: ' + days);



    var tracker = new GlideRecord('x_1804195_leave_ma_leave_tracker');
    tracker.addQuery('user', current.requested_by);
    tracker.query();

    if (tracker.next()) //record for this user already exists
	{ 
        if (current.leave_type == 'sl' && tracker.sick_leaves < days) 
		{
            gs.addErrorMessage('You do not have enough sick leave remaining. Requested: ' + days + ', Remaining: ' + tracker.sick_leaves);
            current.setAbortAction(true);
        }
        else if (current.leave_type == 'pl' && tracker.planned_leaves < days) 
		{
            gs.addErrorMessage('You do not have enough planned leave remaining. Requested: ' + days + ', Remaining: ' + tracker.planned_leaves);
            current.setAbortAction(true);
        }
    } 
	else 
	{
        //no user record yet - first time
        if (current.leave_type == 'sl' && days > 30) 
		{
            gs.addErrorMessage('You do not have enough sick leave remaining. Requested: ' + days + ', Available: 30');
            current.setAbortAction(true);
        }
        else if (current.leave_type == 'pl' && days > 60) 
		{
            gs.addErrorMessage('You do not have enough planned leave remaining. Requested: ' + days + ', Available: 60');
            current.setAbortAction(true);
        }
    }

})(current, previous);
]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-07-22 10:38:59</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>86f43e4783bee250c57dac80ceaad3dd</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>Verify Availabilty of Leave Before</sys_name>
        <sys_overrides/>
        <sys_package display_value="Leave Management System" source="x_1804195_leave_ma">705d8df993fa2e10d708393efaba10e0</sys_package>
        <sys_policy/>
        <sys_scope display_value="Leave Management System">705d8df993fa2e10d708393efaba10e0</sys_scope>
        <sys_update_name>sys_script_86f43e4783bee250c57dac80ceaad3dd</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-07-22 10:46:05</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=86f43e4783bee250c57dac80ceaad3dd"/>
</record_update>
